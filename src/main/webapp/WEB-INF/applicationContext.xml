<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd 
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- Ativa injeção de dependencia por anotation -->
	<context:annotation-config />

	<!-- Pacote onde será buscado o beans @Repository, @Service and @Component -->
	<context:component-scan base-package="br.com.jabio" />

	<!-- Habilitar o spring controlar as transações -->
	<tx:annotation-driven />
	
	<!-- Configurações do Spring Security -->
	<http auto-config="true">
		<intercept-url pattern="/*" access="ROLE_ADM, ROLE_CONVIDADO, ROLE_PUBLICO" />
		<intercept-url pattern="/convidado/*" access="ROLE_CONVIDADO" />
		<intercept-url pattern="/publico/*" access="ROLE_PUBLICO" />
		<intercept-url pattern="/admin/*" access="ROLE_ADM" />		
		<logout logout-success-url="/" />
	</http>
	
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="admin" authorities="ROLE_ADM, ROLE_PUBLICO, ROLE_CONVIDADO" />
				<user name="convidado" password="convidado" authorities="ROLE_CONVIDADO" />
				<user name="publico" password="publico" authorities="ROLE_PUBLICO" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	
	
	<!-- Configurar o spring para criar o entity manager -->
	<b:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<b:property name="dataSource" ref="dataSource"/>
		<b:property name="jpaVendorAdapter">
			<b:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<b:property name="showSql" value="true" />
				<b:property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
			</b:bean>
		</b:property>
		<b:property name="jpaProperties">
			<b:props>
				<b:prop key="hibernate.format_sql">true</b:prop>
				<b:prop key="hibernate.default_schema">public</b:prop>
				<b:prop key="hibernate.hbm2ddl.auto">update</b:prop><!-- create | create-drop | validate | update -->
				<b:prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</b:prop>
			</b:props>
		</b:property>
	</b:bean>
	
	<!-- Datasource de conexão com o banco de dados -->
	<b:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<b:property name="url" value="jdbc:postgresql://localhost:5432/spring_security" />
		<b:property name="driverClassName" value="org.postgresql.Driver" />
		<b:property name="username" value="postgres" />
		<b:property name="password" value="postgres" />
	</b:bean>
	
	<!-- gerenciador de transações -->
	<b:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<b:property name="entityManagerFactory" ref="entityManagerFactory"/>	
	</b:bean>
	
	<!-- Exception translation bean post processor -->
	<b:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
</b:beans>